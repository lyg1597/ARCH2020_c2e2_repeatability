#include <vector>
#include <cmath>
extern "C" std::vector<double> jcalc(std::vector<double> listvalue, int curstate)
{
    std::vector<double> ret;
    if (curstate == 1)
    {
        double x1= listvalue[0];
        double x2= listvalue[1];
        double x3= listvalue[2];
        double x4= listvalue[3];
        double x5= listvalue[4];
        double x6= listvalue[5];
        double x7= listvalue[6];
        double x8= listvalue[7];
        double x9= listvalue[8];
        double x10= listvalue[9];
        double x11= listvalue[10];
        double x12= listvalue[11];
        double x13= listvalue[12];
        double x14= listvalue[13];
        double x15= listvalue[14];
        double x16= listvalue[15];
        double x17= listvalue[16];
        double x18= listvalue[17];
        double x19= listvalue[18];
        double x20= listvalue[19];
        double x21= listvalue[20];
        double x22= listvalue[21];
        double x23= listvalue[22];
        double x24= listvalue[23];
        double x25= listvalue[24];
        double x26= listvalue[25];
        double x27= listvalue[26];
        double x28= listvalue[27];
        double x29= listvalue[28];
        double x30= listvalue[29];
        double x31= listvalue[30];
        double x32= listvalue[31];
        double x33= listvalue[32];
        double x34= listvalue[33];
        double x35= listvalue[34];
        double x36= listvalue[35];
        double x37= listvalue[36];
        double x38= listvalue[37];
        double x39= listvalue[38];
        double x40= listvalue[39];
        double x41= listvalue[40];
        double x42= listvalue[41];
        double x43= listvalue[42];
        double x44= listvalue[43];
        double x45= listvalue[44];
        double x46= listvalue[45];
        double x47= listvalue[46];
        double x48= listvalue[47];
        double u= listvalue[48];
        double Entry = 0;
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=1;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=-606.164046021092872251756489277;
        ret.push_back(Entry);
        Entry=34.6695356800438290179044997785;
        ret.push_back(Entry);
        Entry=-5.04318723462539342250465779216;
        ret.push_back(Entry);
        Entry=-734.040295849883477785624563694;
        ret.push_back(Entry);
        Entry=124.549975345843037644044670742;
        ret.push_back(Entry);
        Entry=-302.909834269278178453532746062;
        ret.push_back(Entry);
        Entry=-98.2100342418846707914781291038;
        ret.push_back(Entry);
        Entry=-2.20397479797288031733160096337;
        ret.push_back(Entry);
        Entry=-10.6677922202438022480919244117;
        ret.push_back(Entry);
        Entry=-41.863998082454457971834926866;
        ret.push_back(Entry);
        Entry=8.17839556225174568737656954909;
        ret.push_back(Entry);
        Entry=51.3604382961238172811135882512;
        ret.push_back(Entry);
        Entry=-10.9557477057937262543418910354;
        ret.push_back(Entry);
        Entry=-2.30858553622791351500609380309;
        ret.push_back(Entry);
        Entry=-11.9980250650595809958076642943;
        ret.push_back(Entry);
        Entry=-42.0033077660594429403317917604;
        ret.push_back(Entry);
        Entry=4.94176920969730115729134922731;
        ret.push_back(Entry);
        Entry=-1.52161539515134913713723108231;
        ret.push_back(Entry);
        Entry=-10.3503607724969182157792602084;
        ret.push_back(Entry);
        Entry=8.69692466785371820492400729563;
        ret.push_back(Entry);
        Entry=14.960213669360362231941508071;
        ret.push_back(Entry);
        Entry=37.8850089028900143262035271619;
        ret.push_back(Entry);
        Entry=-24.5460553348856329591853864258;
        ret.push_back(Entry);
        Entry=-19.2995740309546626178871520096;
        ret.push_back(Entry);
        Entry=-1.13328370086289553775316107931;
        ret.push_back(Entry);
        Entry=0.0365226968908368698762956228165;
        ret.push_back(Entry);
        Entry=-0.00531275647171620263309321785528;
        ret.push_back(Entry);
        Entry=-0.773276332009313782656079183653;
        ret.push_back(Entry);
        Entry=0.131207441446377193194905430573;
        ret.push_back(Entry);
        Entry=-0.319101013559786317319577619855;
        ret.push_back(Entry);
        Entry=-0.103459572661279267102862888805;
        ret.push_back(Entry);
        Entry=-0.00232178208464593879498116812954;
        ret.push_back(Entry);
        Entry=-0.0112380087659224754681464020223;
        ret.push_back(Entry);
        Entry=-0.0441017189426105987726245416525;
        ret.push_back(Entry);
        Entry=0.00861554855499246582950512163279;
        ret.push_back(Entry);
        Entry=0.0541057649637036036649462289461;
        ret.push_back(Entry);
        Entry=-0.0115413561156006011509944642057;
        ret.push_back(Entry);
        Entry=-0.00243198438570058897076342496746;
        ret.push_back(Entry);
        Entry=-0.0126393454321325829359246029071;
        ret.push_back(Entry);
        Entry=-0.0442484755512943389588187415029;
        ret.push_back(Entry);
        Entry=0.00520591740857416756388387213406;
        ret.push_back(Entry);
        Entry=-0.0016029490480756059932881951724;
        ret.push_back(Entry);
        Entry=-0.010903609916449801334192848401;
        ret.push_back(Entry);
        Entry=0.00916179413778934331746839347943;
        ret.push_back(Entry);
        Entry=0.0157598698808382418901086197138;
        ret.push_back(Entry);
        Entry=0.0399100451992877650053692661913;
        ret.push_back(Entry);
        Entry=-0.0258580947815367744035963681881;
        ret.push_back(Entry);
        Entry=-0.0203311779208327630952268805231;
        ret.push_back(Entry);
        Entry=0.0136967538693329680865634844542;
        ret.push_back(Entry);
        Entry=33.5100191754554117551379022188;
        ret.push_back(Entry);
        Entry=-664.524859608272777222737204283;
        ret.push_back(Entry);
        Entry=79.7727201753184402832630439661;
        ret.push_back(Entry);
        Entry=207.449582249006965639637201093;
        ret.push_back(Entry);
        Entry=829.030036981235411985835526139;
        ret.push_back(Entry);
        Entry=94.0547240104095294555008877069;
        ret.push_back(Entry);
        Entry=-4.31328119435693757566241401946;
        ret.push_back(Entry);
        Entry=-136.484496644295290934678632766;
        ret.push_back(Entry);
        Entry=16.2760005478701543779607163742;
        ret.push_back(Entry);
        Entry=28.2430667031913422704292315757;
        ret.push_back(Entry);
        Entry=-76.9355704697986577181208053691;
        ret.push_back(Entry);
        Entry=-0.554521750445144512298156769248;
        ret.push_back(Entry);
        Entry=30.9314943158471429285327758407;
        ret.push_back(Entry);
        Entry=51.904458293384465150666073896;
        ret.push_back(Entry);
        Entry=11.8704648678263247063568996964;
        ret.push_back(Entry);
        Entry=9.69475811532666753578268981073;
        ret.push_back(Entry);
        Entry=-15.6126585399260378039798524696;
        ret.push_back(Entry);
        Entry=15.140252020271194766110056662;
        ret.push_back(Entry);
        Entry=7.61328297493493977299294783734;
        ret.push_back(Entry);
        Entry=-5.71224517189426084229353364208;
        ret.push_back(Entry);
        Entry=3.78410546500479361142765810655;
        ret.push_back(Entry);
        Entry=-21.1717326393644711401975655463;
        ret.push_back(Entry);
        Entry=-29.0137351047801672621062607504;
        ret.push_back(Entry);
        Entry=10.2446041638131752904428140027;
        ret.push_back(Entry);
        Entry=0.0353012025749897262461018954127;
        ret.push_back(Entry);
        Entry=-1.19476403232433892043218293111;
        ret.push_back(Entry);
        Entry=0.0840367442816052634402268495251;
        ret.push_back(Entry);
        Entry=0.218538213943295422936330396624;
        ret.push_back(Entry);
        Entry=0.873343487193535050749915171764;
        ret.push_back(Entry);
        Entry=0.0990821517600328632857653587962;
        ret.push_back(Entry);
        Entry=-0.00454383536501849066846503433226;
        ret.push_back(Entry);
        Entry=-0.143779893165319805348190129735;
        ret.push_back(Entry);
        Entry=0.0171459882207916740337605432387;
        ret.push_back(Entry);
        Entry=0.0297527201753184505905736045861;
        ret.push_back(Entry);
        Entry=-0.0810479427475688102289197445316;
        ret.push_back(Entry);
        Entry=-0.000584162142172305227927342485827;
        ret.push_back(Entry);
        Entry=0.0325848500205451266364953255561;
        ret.push_back(Entry);
        Entry=0.054678863169428847113007208236;
        ret.push_back(Entry);
        Entry=0.0125049668538556365410263637727;
        ret.push_back(Entry);
        Entry=0.0102129638405697841657682189975;
        ret.push_back(Entry);
        Entry=-0.0164471894261060125330686787493;
        ret.push_back(Entry);
        Entry=0.0159495315710176700785272174699;
        ret.push_back(Entry);
        Entry=0.00802022942062731100665295969065;
        ret.push_back(Entry);
        Entry=-0.00601757704424051454578092901215;
        ret.push_back(Entry);
        Entry=0.00398637405834817177413542665931;
        ret.push_back(Entry);
        Entry=-0.0223034077523626902972431196304;
        ret.push_back(Entry);
        Entry=-0.0305645815641692915332061630806;
        ret.push_back(Entry);
        Entry=0.0107922003835091082080133162435;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=-3.45768646339355489871536519786;
        ret.push_back(Entry);
        Entry=76.5718829893994836766069056466;
        ret.push_back(Entry);
        Entry=-799.408768313541713723680004478;
        ret.push_back(Entry);
        Entry=-347.777337774074283061054302379;
        ret.push_back(Entry);
        Entry=-142.585708278404524662619223818;
        ret.push_back(Entry);
        Entry=867.69780173003141499066259712;
        ret.push_back(Entry);
        Entry=-165.083263893009444700510357507;
        ret.push_back(Entry);
        Entry=36.9917277870508200976473744959;
        ret.push_back(Entry);
        Entry=91.2559574638243731214970466681;
        ret.push_back(Entry);
        Entry=-66.2656834088792408010704093613;
        ret.push_back(Entry);
        Entry=26.4344943411510655550955561921;
        ret.push_back(Entry);
        Entry=39.5193022601857961717541911639;
        ret.push_back(Entry);
        Entry=67.3732918325279968030372401699;
        ret.push_back(Entry);
        Entry=-32.1768522507694285650359233841;
        ret.push_back(Entry);
        Entry=17.1642394801134088311300729401;
        ret.push_back(Entry);
        Entry=133.44969209773412899266986642;
        ret.push_back(Entry);
        Entry=34.3778155579003268371707235929;
        ret.push_back(Entry);
        Entry=6.56518872719111001856617804151;
        ret.push_back(Entry);
        Entry=27.8685849394901730136098194635;
        ret.push_back(Entry);
        Entry=-51.4728370091557962950901128352;
        ret.push_back(Entry);
        Entry=41.979282705102633599381078966;
        ret.push_back(Entry);
        Entry=-44.928035746072858103161706822;
        ret.push_back(Entry);
        Entry=34.4171011524083922950012492947;
        ret.push_back(Entry);
        Entry=30.8238894492844828221222996945;
        ret.push_back(Entry);
        Entry=-0.00364250728155965939128457797835;
        ret.push_back(Entry);
        Entry=0.0806648160712857553722443526567;
        ret.push_back(Entry);
        Entry=-1.33685772000113489710315661796;
        ret.push_back(Entry);
        Entry=-0.366366791960229365443524329748;
        ret.push_back(Entry);
        Entry=-0.150207224545499090639921746515;
        ret.push_back(Entry);
        Entry=0.914078124879070585961926553864;
        ret.push_back(Entry);
        Entry=-0.17390732748056744738640588821;
        ret.push_back(Entry);
        Entry=0.0389690149965301324552768846843;
        ret.push_back(Entry);
        Entry=0.0961337859208560852053437884024;
        ret.push_back(Entry);
        Entry=-0.0698077281275878841482196435209;
        ret.push_back(Entry);
        Entry=0.0278474755109990868007230346848;
        ret.push_back(Entry);
        Entry=0.0416316949716606030107435287846;
        ret.push_back(Entry);
        Entry=0.0709745396944969769714717244824;
        ret.push_back(Entry);
        Entry=-0.0338967747011916162303002408862;
        ret.push_back(Entry);
        Entry=0.0180817056779396453936037403309;
        ret.push_back(Entry);
        Entry=0.140582873049328843650940257248;
        ret.push_back(Entry);
        Entry=0.0362153845360053405766365131058;
        ret.push_back(Entry);
        Entry=0.00691611230499738095095496603903;
        ret.push_back(Entry);
        Entry=0.0293582204874323765553256748717;
        ret.push_back(Entry);
        Entry=-0.0542241714242962871694864190886;
        ret.push_back(Entry);
        Entry=0.0442231665819623684376971084475;
        ret.push_back(Entry);
        Entry=-0.047329536688999356008888952374;
        ret.push_back(Entry);
        Entry=0.0362567701091008540159599249364;
        ret.push_back(Entry);
        Entry=0.0324714929196667848043666992908;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=-734.858668032787022639240603894;
        ret.push_back(Entry);
        Entry=206.799323770491838558882591315;
        ret.push_back(Entry);
        Entry=-348.316905737704985313030192629;
        ret.push_back(Entry);
        Entry=-1910.3864754098362936929333955;
        ret.push_back(Entry);
        Entry=-135.40587090163936068165639881;
        ret.push_back(Entry);
        Entry=-218.045901639344262295081967213;
        ret.push_back(Entry);
        Entry=-1130.01311475409852391749154776;
        ret.push_back(Entry);
        Entry=263.61145491803279128362191841;
        ret.push_back(Entry);
        Entry=-178.598760245901672760737710632;
        ret.push_back(Entry);
        Entry=-285.024415983606616009637946263;
        ret.push_back(Entry);
        Entry=65.1246311475409811464487574995;
        ret.push_back(Entry);
        Entry=125.087694672131149786764581222;
        ret.push_back(Entry);
        Entry=-78.1636116803278753195627359673;
        ret.push_back(Entry);
        Entry=-2.02878883196721337967005638347;
        ret.push_back(Entry);
        Entry=11.4138063524590163934426229508;
        ret.push_back(Entry);
        Entry=-54.4813227459016431453164841514;
        ret.push_back(Entry);
        Entry=-17.6245655737704929322262614733;
        ret.push_back(Entry);
        Entry=-14.27330225409836117478334927;
        ret.push_back(Entry);
        Entry=-13.3341465163934440596449348959;
        ret.push_back(Entry);
        Entry=11.5139415983606578919307139586;
        ret.push_back(Entry);
        Entry=88.0761936475410038838163018227;
        ret.push_back(Entry);
        Entry=56.3041915983606600093480665237;
        ret.push_back(Entry);
        Entry=-12.5295655737704940690946386894;
        ret.push_back(Entry);
        Entry=19.4972182377049207957497856114;
        ret.push_back(Entry);
        Entry=-0.774138452868852522392728587874;
        ret.push_back(Entry);
        Entry=0.217853196721311481720562142073;
        ret.push_back(Entry);
        Entry=-0.366935194672131148596605498824;
        ret.push_back(Entry);
        Entry=-2.50721967213114771411142100987;
        ret.push_back(Entry);
        Entry=-0.142643606557377067289849037479;
        ret.push_back(Entry);
        Entry=-0.229700922131147566851439023594;
        ret.push_back(Entry);
        Entry=-1.1904147540983607278519684769;
        ret.push_back(Entry);
        Entry=0.277702059426229552752118934222;
        ret.push_back(Entry);
        Entry=-0.188145245901639363017565642622;
        ret.push_back(Entry);
        Entry=-0.300259590163934442230697641207;
        ret.push_back(Entry);
        Entry=0.0686056834016393474184880574285;
        ret.push_back(Entry);
        Entry=0.131773903688524596233833108272;
        ret.push_back(Entry);
        Entry=-0.0823416260245901782122146528309;
        ret.push_back(Entry);
        Entry=-0.00213723196721311500811957273527;
        ret.push_back(Entry);
        Entry=0.0120238985655737717211932746864;
        ret.push_back(Entry);
        Entry=-0.0573934672131147585738553118517;
        ret.push_back(Entry);
        Entry=-0.0185666362704918035120282837624;
        ret.push_back(Entry);
        Entry=-0.0150362407786885244470598266275;
        ret.push_back(Entry);
        Entry=-0.0140468852459016396022617456651;
        ret.push_back(Entry);
        Entry=0.0121293862704918032485723600189;
        ret.push_back(Entry);
        Entry=0.0927840563524590239419254089626;
        ret.push_back(Entry);
        Entry=0.0593137725409836127909990466378;
        ret.push_back(Entry);
        Entry=-0.0131992981557377073859038674186;
        ret.push_back(Entry);
        Entry=0.0205393862704918057915381979228;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=126.412530737704926764308765996;
        ret.push_back(Entry);
        Entry=830.412161885245950543321669102;
        ret.push_back(Entry);
        Entry=-142.112366803278689530998235568;
        ret.push_back(Entry);
        Entry=-134.843053278688557838904671371;
        ret.push_back(Entry);
        Entry=-1968.71854508196724964363966137;
        ret.push_back(Entry);
        Entry=54.5612540983606564282126782928;
        ret.push_back(Entry);
        Entry=141.801977459016399052416090854;
        ret.push_back(Entry);
        Entry=1183.90788934426245759823359549;
        ret.push_back(Entry);
        Entry=118.233555327868856466011493467;
        ret.push_back(Entry);
        Entry=-32.8974446721311508667895395774;
        ret.push_back(Entry);
        Entry=295.191485655737722026970004663;
        ret.push_back(Entry);
        Entry=-13.7271444672131153197369712871;
        ret.push_back(Entry);
        Entry=-6.98091086065573840357956214575;
        ret.push_back(Entry);
        Entry=-150.488750000000010231815394945;
        ret.push_back(Entry);
        Entry=-16.6307950819672143438765488099;
        ret.push_back(Entry);
        Entry=76.502943647540988081345858518;
        ret.push_back(Entry);
        Entry=25.452959016393442936987412395;
        ret.push_back(Entry);
        Entry=26.848077868852463723214896163;
        ret.push_back(Entry);
        Entry=8.6960323770491818606842571171;
        ret.push_back(Entry);
        Entry=-20.180311475409837385086575523;
        ret.push_back(Entry);
        Entry=-16.5110307377049174704097822541;
        ret.push_back(Entry);
        Entry=8.53303780737704897774165146984;
        ret.push_back(Entry);
        Entry=112.091055327868858171314059291;
        ret.push_back(Entry);
        Entry=9.10243206967213147606798884226;
        ret.push_back(Entry);
        Entry=0.133169549180327889681407782518;
        ret.push_back(Entry);
        Entry=0.874799487704918110608787173987;
        ret.push_back(Entry);
        Entry=-0.149708575819672146112182531397;
        ret.push_back(Entry);
        Entry=-0.142050706967213113962600345985;
        ret.push_back(Entry);
        Entry=-2.56866967213114749668534386728;
        ret.push_back(Entry);
        Entry=0.0574776711065573819858798287896;
        ret.push_back(Entry);
        Entry=0.149381598360655759583082158315;
        ret.push_back(Entry);
        Entry=1.24719036885246803926509246367;
        ret.push_back(Entry);
        Entry=0.124553391393442638990229909268;
        ret.push_back(Entry);
        Entry=-0.0346558842213114809416296679956;
        ret.push_back(Entry);
        Entry=0.31097011270491808909710584885;
        ret.push_back(Entry);
        Entry=-0.0144608903688524595421149854246;
        ret.push_back(Entry);
        Entry=-0.00735405563524590185492391114508;
        ret.push_back(Entry);
        Entry=-0.158532694672131158064587452827;
        ret.push_back(Entry);
        Entry=-0.0175197469262295089931225078317;
        ret.push_back(Entry);
        Entry=0.0805921915983606601541211489348;
        ret.push_back(Entry);
        Entry=0.0268134743852459049573422333879;
        ret.push_back(Entry);
        Entry=0.0282831659836065597846133101712;
        ret.push_back(Entry);
        Entry=0.00916085409836065595046150633607;
        ret.push_back(Entry);
        Entry=-0.0212589928278688541918306498246;
        ret.push_back(Entry);
        Entry=-0.0173935809426229541496677910573;
        ret.push_back(Entry);
        Entry=0.0089891471311475418942693593749;
        ret.push_back(Entry);
        Entry=0.118082561475409852924656206596;
        ret.push_back(Entry);
        Entry=0.00958897674180327931614531422611;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=-308.616343741740308814769377932;
        ret.push_back(Entry);
        Entry=89.1396373220260187508756644093;
        ret.push_back(Entry);
        Entry=845.849369842552391673962119967;
        ret.push_back(Entry);
        Entry=-220.153958013332129439731943421;
        ret.push_back(Entry);
        Entry=49.493840456681908790415036492;
        ret.push_back(Entry);
        Entry=-2326.78886362845423718681558967;
        ret.push_back(Entry);
        Entry=132.762195632400789691018871963;
        ret.push_back(Entry);
        Entry=67.1693114874989021245710318908;
        ret.push_back(Entry);
        Entry=-1400.60894683425726725545246154;
        ret.push_back(Entry);
        Entry=24.1684451914928040139329823432;
        ret.push_back(Entry);
        Entry=24.2784600812493494004229432903;
        ret.push_back(Entry);
        Entry=-85.2664777307371366532606771216;
        ret.push_back(Entry);
        Entry=-294.404263944684998932643793523;
        ret.push_back(Entry);
        Entry=127.924746060516568491038924549;
        ret.push_back(Entry);
        Entry=-24.4556350156657558159167820122;
        ret.push_back(Entry);
        Entry=-379.055709135237179907562676817;
        ret.push_back(Entry);
        Entry=-100.156356552762701994652161375;
        ret.push_back(Entry);
        Entry=-46.5368599074257858205783122685;
        ret.push_back(Entry);
        Entry=-67.4113485717403193575592013076;
        ret.push_back(Entry);
        Entry=169.298036866021362811807193793;
        ret.push_back(Entry);
        Entry=-100.190547497194657466934586409;
        ret.push_back(Entry);
        Entry=200.073348276390760247522848658;
        ret.push_back(Entry);
        Entry=-126.908781193945898735364608001;
        ret.push_back(Entry);
        Entry=-44.0445112482093250605430512223;
        ret.push_back(Entry);
        Entry=-0.325112557341552976808429775701;
        ret.push_back(Entry);
        Entry=0.0939043434256974784979377091076;
        ret.push_back(Entry);
        Entry=0.891061847514972082962003696593;
        ret.push_back(Entry);
        Entry=-0.231921662761593649904057201638;
        ret.push_back(Entry);
        Entry=0.0521393937056681688879677949444;
        ret.push_back(Entry);
        Entry=-2.94587963846956268909593745775;
        ret.push_back(Entry);
        Entry=0.139858617858113681853282628254;
        ret.push_back(Entry);
        Entry=0.0707596560024154747070568305389;
        ret.push_back(Entry);
        Entry=-1.47547451105068261334452017763;
        ret.push_back(Entry);
        Entry=0.0254603004100091533101757335089;
        ret.push_back(Entry);
        Entry=0.0255761959540872531315702786969;
        ret.push_back(Entry);
        Entry=-0.0898241550792129445079936544971;
        ret.push_back(Entry);
        Entry=-0.310140808373630394445541469395;
        ret.push_back(Entry);
        Entry=0.134762596329576267439875891796;
        ret.push_back(Entry);
        Entry=-0.0257628418271414957874121398618;
        ret.push_back(Entry);
        Entry=-0.399317055872800252824816880093;
        ret.push_back(Entry);
        Entry=-0.105509934185959247665564930685;
        ret.push_back(Entry);
        Entry=-0.0490243559921628921371983267363;
        ret.push_back(Entry);
        Entry=-0.0710146310905265254476148584217;
        ret.push_back(Entry);
        Entry=0.178347387520258249260507454892;
        ret.push_back(Entry);
        Entry=-0.105545949901565822015570006442;
        ret.push_back(Entry);
        Entry=0.210767701926450418126179897627;
        ret.push_back(Entry);
        Entry=-0.133692330411504717302406675117;
        ret.push_back(Entry);
        Entry=-0.0463987858687462811912993743135;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=-97.1351291866028532240306958556;
        ret.push_back(Entry);
        Entry=-3.26441942583732025440212964895;
        ret.push_back(Entry);
        Entry=-166.031933014354052602357114665;
        ret.push_back(Entry);
        Entry=-1130.13540669856456588604487479;
        ret.push_back(Entry);
        Entry=140.174382775119624966464471072;
        ret.push_back(Entry);
        Entry=149.903205741626777580677298829;
        ret.push_back(Entry);
        Entry=-2042.1976076555022245884174481;
        ret.push_back(Entry);
        Entry=77.1528258373205773068548296578;
        ret.push_back(Entry);
        Entry=122.698851674641147724287293386;
        ret.push_back(Entry);
        Entry=-1223.55655502392346534179523587;
        ret.push_back(Entry);
        Entry=-66.5052641148325420772380311973;
        ret.push_back(Entry);
        Entry=249.182382775119606321823084727;
        ret.push_back(Entry);
        Entry=-16.6315004784688973415995860705;
        ret.push_back(Entry);
        Entry=2.62739569377990456189309043111;
        ret.push_back(Entry);
        Entry=56.399134928229663898946455447;
        ret.push_back(Entry);
        Entry=-46.8711598086124325845958082937;
        ret.push_back(Entry);
        Entry=-118.395215311004776026493345853;
        ret.push_back(Entry);
        Entry=-62.0111196172248781977032194845;
        ret.push_back(Entry);
        Entry=-2.16584526315789460682026401628;
        ret.push_back(Entry);
        Entry=-30.2686478468899515803514077561;
        ret.push_back(Entry);
        Entry=130.250133971291859324992401525;
        ret.push_back(Entry);
        Entry=5.21906937799043024739376051002;
        ret.push_back(Entry);
        Entry=-24.9314325358851647251867689192;
        ret.push_back(Entry);
        Entry=6.33034277511961640527715644566;
        ret.push_back(Entry);
        Entry=-0.102327215311004776632231028088;
        ret.push_back(Entry);
        Entry=-0.00343890966507177020181074134086;
        ret.push_back(Entry);
        Entry=-0.174906698564593315881054991223;
        ret.push_back(Entry);
        Entry=-1.19054354066985634830189155764;
        ret.push_back(Entry);
        Entry=0.147667004784688998819675020968;
        ret.push_back(Entry);
        Entry=0.157915856459330122829598508361;
        ret.push_back(Entry);
        Entry=-2.64607636363636355980588632519;
        ret.push_back(Entry);
        Entry=0.0812768114832535804037405569034;
        ret.push_back(Entry);
        Entry=0.129257368421052620810485223046;
        ret.push_back(Entry);
        Entry=-1.28895827751196190291693710606;
        ret.push_back(Entry);
        Entry=-0.070060113875598087340712538662;
        ret.push_back(Entry);
        Entry=0.26250172248803826935414917898;
        ret.push_back(Entry);
        Entry=-0.0175204899521531100303750605462;
        ret.push_back(Entry);
        Entry=0.00276783569377990435952940906361;
        ret.push_back(Entry);
        Entry=0.0594137904306220113181957742654;
        ret.push_back(Entry);
        Entry=-0.0493765244019138752062936248421;
        ret.push_back(Entry);
        Entry=-0.124723693779904304390626634813;
        ret.push_back(Entry);
        Entry=-0.0653257483253588538962830511991;
        ret.push_back(Entry);
        Entry=-0.00228161435406698531735969481815;
        ret.push_back(Entry);
        Entry=-0.0318865722488038266790866259726;
        ret.push_back(Entry);
        Entry=0.137212287081339701089177651738;
        ret.push_back(Entry);
        Entry=0.00549803990430622075563649175933;
        ret.push_back(Entry);
        Entry=-0.0262640717703349277356572599729;
        ret.push_back(Entry);
        Entry=0.00666871330143540674145752333857;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=-2.54354593301435372154628566932;
        ret.push_back(Entry);
        Entry=-138.285349282296635919919935986;
        ret.push_back(Entry);
        Entry=34.5959272727272661995812086388;
        ret.push_back(Entry);
        Entry=264.02404784688991412622272037;
        ret.push_back(Entry);
        Entry=1185.01569377990426801261492074;
        ret.push_back(Entry);
        Entry=58.9313674641148352861819148529;
        ret.push_back(Entry);
        Entry=77.0776200956937742603258811869;
        ret.push_back(Entry);
        Entry=-2124.43483253588510706322267652;
        ret.push_back(Entry);
        Entry=-54.1781454545454579374563763849;
        ret.push_back(Entry);
        Entry=240.202430622009558192075928673;
        ret.push_back(Entry);
        Entry=-1279.61588516746382993005681783;
        ret.push_back(Entry);
        Entry=14.033242105263157739614143793;
        ret.push_back(Entry);
        Entry=37.3134947368421023838891414925;
        ret.push_back(Entry);
        Entry=238.992688995215303293662145734;
        ret.push_back(Entry);
        Entry=1.76482507177033487444361981034;
        ret.push_back(Entry);
        Entry=-96.4675311004784674651091336273;
        ret.push_back(Entry);
        Entry=33.3242832535885185052393353544;
        ret.push_back(Entry);
        Entry=-103.988497607655503429668897297;
        ret.push_back(Entry);
        Entry=-129.687569377990428165503544733;
        ret.push_back(Entry);
        Entry=35.9614717703349313637772866059;
        ret.push_back(Entry);
        Entry=34.9162956937799009438094799407;
        ret.push_back(Entry);
        Entry=-10.0898076555023923361886772909;
        ret.push_back(Entry);
        Entry=-99.8399712918660213745170040056;
        ret.push_back(Entry);
        Entry=-13.7130880382775117709570622537;
        ret.push_back(Entry);
        Entry=-0.00267950392344497604832365134087;
        ret.push_back(Entry);
        Entry=-0.145677004784689007044207187391;
        ret.push_back(Entry);
        Entry=0.0364451540669856466347908963144;
        ret.push_back(Entry);
        Entry=0.278136708133971288781083330832;
        ret.push_back(Entry);
        Entry=1.24835732057416270990302109567;
        ret.push_back(Entry);
        Entry=0.0620813760765550198827966710269;
        ret.push_back(Entry);
        Entry=0.0811975856459330180836531098976;
        ret.push_back(Entry);
        Entry=-2.73270937799043034388546402624;
        ret.push_back(Entry);
        Entry=-0.0570740842105263157524319694858;
        ret.push_back(Entry);
        Entry=0.253041770334928250996142651275;
        ret.push_back(Entry);
        Entry=-1.34801416267942575366589608166;
        ret.push_back(Entry);
        Entry=0.0147833492822966490465308453395;
        ret.push_back(Entry);
        Entry=0.03930798181818181968871783738;
        ret.push_back(Entry);
        Entry=0.251767368421052628590928179619;
        ret.push_back(Entry);
        Entry=0.00185915875598086110555284822254;
        ret.push_back(Entry);
        Entry=-0.101623933014354059234385374566;
        ret.push_back(Entry);
        Entry=0.0351055377990430600432247842946;
        ret.push_back(Entry);
        Entry=-0.109546909090909083683840208323;
        ret.push_back(Entry);
        Entry=-0.136619645933014344230116421386;
        ret.push_back(Entry);
        Entry=0.0378836899521531114687356023296;
        ret.push_back(Entry);
        Entry=0.0367826468899521488720161244146;
        ret.push_back(Entry);
        Entry=-0.010629130143540669456436731366;
        ret.push_back(Entry);
        Entry=-0.105176631578947354928033064425;
        ret.push_back(Entry);
        Entry=-0.0144460822966507168585437170805;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=-11.0679097790644469512244540965;
        ret.push_back(Entry);
        Entry=-4.38464653869288678578186591039;
        ret.push_back(Entry);
        Entry=54.5760433481462072791146056261;
        ret.push_back(Entry);
        Entry=-167.434912003892009124683681875;
        ret.push_back(Entry);
        Entry=119.064546475232759803475346416;
        ret.push_back(Entry);
        Entry=-1413.11506470533231549779884517;
        ret.push_back(Entry);
        Entry=116.298198046884365908226754982;
        ret.push_back(Entry);
        Entry=-50.9782870399864975752279860899;
        ret.push_back(Entry);
        Entry=-2668.81675413462971846456639469;
        ret.push_back(Entry);
        Entry=58.1198486223692398766615951899;
        ret.push_back(Entry);
        Entry=61.2207493920817995558536495082;
        ret.push_back(Entry);
        Entry=-299.507898592873118559509748593;
        ret.push_back(Entry);
        Entry=-1455.38323047608332672098185867;
        ret.push_back(Entry);
        Entry=600.587217128772749674681108445;
        ret.push_back(Entry);
        Entry=-14.9624211816159249366364747402;
        ret.push_back(Entry);
        Entry=-609.808684687576828764576930553;
        ret.push_back(Entry);
        Entry=-179.982716010567315834123292007;
        ret.push_back(Entry);
        Entry=-140.88750679486659578287799377;
        ret.push_back(Entry);
        Entry=-67.4247277709610699503173236735;
        ret.push_back(Entry);
        Entry=261.43970088521496109024155885;
        ret.push_back(Entry);
        Entry=-215.803846163392847756767878309;
        ret.push_back(Entry);
        Entry=374.461379095225765922805294394;
        ret.push_back(Entry);
        Entry=-267.83394132048357505482272245;
        ret.push_back(Entry);
        Entry=-167.394891584128515660268021747;
        ret.push_back(Entry);
        Entry=-0.011659513681986177421889827599;
        ret.push_back(Entry);
        Entry=-0.00461901536694761787743557235331;
        ret.push_back(Entry);
        Entry=0.0574932506393586867377010207747;
        ret.push_back(Entry);
        Entry=-0.176384667636908798460382286066;
        ret.push_back(Entry);
        Entry=0.125428802622466889493679786938;
        ret.push_back(Entry);
        Entry=-1.48864915983594681136992221582;
        ret.push_back(Entry);
        Entry=0.122514584658866679256483678273;
        ret.push_back(Entry);
        Entry=-0.0537031869889370919168847251512;
        ret.push_back(Entry);
        Entry=-3.30618963738372162453060809639;
        ret.push_back(Entry);
        Entry=0.0612264798330014112237584811282;
        ret.push_back(Entry);
        Entry=0.0644931306691113037654616846339;
        ret.push_back(Entry);
        Entry=-0.315517241379310344827586206897;
        ret.push_back(Entry);
        Entry=-1.53317657221009184809190628584;
        ret.push_back(Entry);
        Entry=0.632689906696242809758246039564;
        ret.push_back(Entry);
        Entry=-0.0157621949756460398572865955202;
        ret.push_back(Entry);
        Entry=-0.64240427822175960592687715689;
        ret.push_back(Entry);
        Entry=-0.189603179790722248254652981814;
        ret.push_back(Entry);
        Entry=-0.148418246068078574229076593838;
        ret.push_back(Entry);
        Entry=-0.0710287250141275194881274046566;
        ret.push_back(Entry);
        Entry=0.275414215895147695967182244203;
        ret.push_back(Entry);
        Entry=-0.227339026817900885513168418584;
        ret.push_back(Entry);
        Entry=0.394477148977398384133152831055;
        ret.push_back(Entry);
        Entry=-0.282150247428292921814119154078;
        ret.push_back(Entry);
        Entry=-0.17634251257412300595284193605;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=-42.2193446882217102711365441792;
        ret.push_back(Entry);
        Entry=29.0279618937644308118706248933;
        ret.push_back(Entry);
        Entry=-59.8327562066974536492125480436;
        ret.push_back(Entry);
        Entry=-284.778947748267853512516012415;
        ret.push_back(Entry);
        Entry=-31.9600671189376477343557780841;
        ret.push_back(Entry);
        Entry=16.1889246535796758053038502112;
        ret.push_back(Entry);
        Entry=-1220.60038972286383796017616987;
        ret.push_back(Entry);
        Entry=238.171174942263263574204756878;
        ret.push_back(Entry);
        Entry=45.9650411374133938124941778369;
        ret.push_back(Entry);
        Entry=-2290.88431004618905717507004738;
        ret.push_back(Entry);
        Entry=219.741657043879882849068962969;
        ret.push_back(Entry);
        Entry=1329.29149826789830513007473201;
        ret.push_back(Entry);
        Entry=-104.549040127020788304434972815;
        ret.push_back(Entry);
        Entry=-231.448729792147787520661950111;
        ret.push_back(Entry);
        Entry=196.73420900692838131362805143;
        ret.push_back(Entry);
        Entry=-91.2934396651270247957654646598;
        ret.push_back(Entry);
        Entry=-418.100736143187077686889097095;
        ret.push_back(Entry);
        Entry=-203.170821304849852140250732191;
        ret.push_back(Entry);
        Entry=77.1466584872979268538983887993;
        ret.push_back(Entry);
        Entry=-64.4069666570438812414067797363;
        ret.push_back(Entry);
        Entry=127.60241772517321123814326711;
        ret.push_back(Entry);
        Entry=-66.4219688221708963737910380587;
        ret.push_back(Entry);
        Entry=17.6468685046189364129531895742;
        ret.push_back(Entry);
        Entry=14.7724314376443413010520089301;
        ret.push_back(Entry);
        Entry=-0.0444760601905311789283636869641;
        ret.push_back(Entry);
        Entry=0.0305795691397228626418058894387;
        ret.push_back(Entry);
        Entry=-0.0630309461605080834090131247649;
        ret.push_back(Entry);
        Entry=-0.300000995958429550469759305997;
        ret.push_back(Entry);
        Entry=-0.033668402136258657186829168495;
        ret.push_back(Entry);
        Entry=0.0170542573614318702934777860492;
        ret.push_back(Entry);
        Entry=-1.28584411085450334155666496372;
        ret.push_back(Entry);
        Entry=0.250901941397228600560964650867;
        ret.push_back(Entry);
        Entry=0.0484219717090069237674931912352;
        ret.push_back(Entry);
        Entry=-2.9080559324480366178988788306;
        ret.push_back(Entry);
        Entry=0.231487326789838299134771659737;
        ret.push_back(Entry);
        Entry=1.40034497690531178903938780422;
        ret.push_back(Entry);
        Entry=-0.110137413394919170261943008882;
        ret.push_back(Entry);
        Entry=-0.243820164549653550789543032806;
        ret.push_back(Entry);
        Entry=0.207250079387990754353765510132;
        ret.push_back(Entry);
        Entry=-0.0961732678983833744190690140385;
        ret.push_back(Entry);
        Entry=-0.440449126732101570169675142097;
        ret.push_back(Entry);
        Entry=-0.214030737586605068756284708797;
        ret.push_back(Entry);
        Entry=0.0812703161085450292988596743271;
        ret.push_back(Entry);
        Entry=-0.0678496586316397198856975592207;
        ret.push_back(Entry);
        Entry=0.13442304416859121585225977924;
        ret.push_back(Entry);
        Entry=-0.0699723664838337033877735393617;
        ret.push_back(Entry);
        Entry=0.0185901320727482680106312784574;
        ret.push_back(Entry);
        Entry=0.0155620496535796761644609986774;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=5.31468201501154702270923735341;
        ret.push_back(Entry);
        Entry=-77.3203882794457371119278832339;
        ret.push_back(Entry);
        Entry=33.0979445727482683992093370762;
        ret.push_back(Entry);
        Entry=62.873027569284062110455124639;
        ret.push_back(Entry);
        Entry=295.947676096997668082622112706;
        ret.push_back(Entry);
        Entry=11.2385876154734400955703677027;
        ret.push_back(Entry);
        Entry=-66.807770640877592427386844065;
        ret.push_back(Entry);
        Entry=-1279.22315242494232734316028655;
        ret.push_back(Entry);
        Entry=57.1980174653579638288647402078;
        ret.push_back(Entry);
        Entry=221.066216801385678536462364718;
        ret.push_back(Entry);
        Entry=-2387.57736720554248677217401564;
        ret.push_back(Entry);
        Entry=120.012730946882214766446850263;
        ret.push_back(Entry);
        Entry=572.577359988452712968864943832;
        ret.push_back(Entry);
        Entry=1229.09129618937640771036967635;
        ret.push_back(Entry);
        Entry=124.631784064665112055081408471;
        ret.push_back(Entry);
        Entry=-56.0893829387990692225685052108;
        ret.push_back(Entry);
        Entry=180.303962182448032081083511002;
        ret.push_back(Entry);
        Entry=-312.478262124711307023972040042;
        ret.push_back(Entry);
        Entry=-445.949797921478022999508539215;
        ret.push_back(Entry);
        Entry=-24.2738127886836032587325462373;
        ret.push_back(Entry);
        Entry=86.3425447459584205489591113292;
        ret.push_back(Entry);
        Entry=-2.83165682736720558665410862886;
        ret.push_back(Entry);
        Entry=-45.57404662240184478605442564;
        ret.push_back(Entry);
        Entry=-33.3462312355658170304195664357;
        ret.push_back(Entry);
        Entry=0.00559876327944572749900631336573;
        ret.push_back(Entry);
        Entry=-0.0814533270785219309928493203188;
        ret.push_back(Entry);
        Entry=0.0348671016166281766412993192716;
        ret.push_back(Entry);
        Entry=0.066233726905311776644857957308;
        ret.push_back(Entry);
        Entry=0.311766721997690510193024238106;
        ret.push_back(Entry);
        Entry=0.0118393143764434181919309452269;
        ret.push_back(Entry);
        Entry=-0.0703787904157043842090502039355;
        ret.push_back(Entry);
        Entry=-1.34760038972286366742991958745;
        ret.push_back(Entry);
        Entry=0.0602553752886836047064633703485;
        ret.push_back(Entry);
        Entry=0.232882686200923783026439650712;
        ret.push_back(Entry);
        Entry=-3.0099174364896073008424082218;
        ret.push_back(Entry);
        Entry=0.126427670323325608281450627146;
        ret.push_back(Entry);
        Entry=0.603182859411085403600338850083;
        ret.push_back(Entry);
        Entry=1.29478890011547331795327409054;
        ret.push_back(Entry);
        Entry=0.131293620092378743313688005401;
        ret.push_back(Entry);
        Entry=-0.0590874819572748261053973806156;
        ret.push_back(Entry);
        Entry=0.18994159930715934225808894098;
        ret.push_back(Entry);
        Entry=-0.329180903579676664705289113044;
        ret.push_back(Entry);
        Entry=-0.469786778290993023432520203642;
        ret.push_back(Entry);
        Entry=-0.0255713005196304826727171644052;
        ret.push_back(Entry);
        Entry=0.0909577439376443308560737932567;
        ret.push_back(Entry);
        Entry=-0.00298301501154734412940561227856;
        ret.push_back(Entry);
        Entry=-0.0480100779445727446348435307755;
        ret.push_back(Entry);
        Entry=-0.0351286590646651269986833199255;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=48.4094460296675634936036658473;
        ret.push_back(Entry);
        Entry=-3.73349351144292240789468451112;
        ret.push_back(Entry);
        Entry=32.3849514824007655988680198789;
        ret.push_back(Entry);
        Entry=123.401386635917688749941589776;
        ret.push_back(Entry);
        Entry=-10.5088582484804664574085109052;
        ret.push_back(Entry);
        Entry=-100.460593497762232573222718202;
        ret.push_back(Entry);
        Entry=251.004510964097960368235362694;
        ret.push_back(Entry);
        Entry=15.1145525924912540460809395881;
        ret.push_back(Entry);
        Entry=-306.959698145288996329327346757;
        ret.push_back(Entry);
        Entry=1327.89426046084395238722208887;
        ret.push_back(Entry);
        Entry=119.588412697637153314644820057;
        ret.push_back(Entry);
        Entry=-2059.64171243184091508737765253;
        ret.push_back(Entry);
        Entry=-316.770812975159799407265381888;
        ret.push_back(Entry);
        Entry=309.660914261144910142320441082;
        ret.push_back(Entry);
        Entry=-870.945690093224243355507496744;
        ret.push_back(Entry);
        Entry=-176.047470781949300544511061162;
        ret.push_back(Entry);
        Entry=612.796700021498281785170547664;
        ret.push_back(Entry);
        Entry=311.810725174428853279096074402;
        ret.push_back(Entry);
        Entry=-23.027424902769364933874385315;
        ret.push_back(Entry);
        Entry=201.61256889205935749487252906;
        ret.push_back(Entry);
        Entry=-171.236868978052257261879276484;
        ret.push_back(Entry);
        Entry=169.572887554478484162245877087;
        ret.push_back(Entry);
        Entry=-91.8731433345711110405318322591;
        ret.push_back(Entry);
        Entry=-44.0014627347704632143177150283;
        ret.push_back(Entry);
        Entry=0.0509970354427658478790874596598;
        ret.push_back(Entry);
        Entry=-0.00393305682862000929173040830733;
        ret.push_back(Entry);
        Entry=0.0341159970049055086271927450525;
        ret.push_back(Entry);
        Entry=0.129997459299939416288438565061;
        ret.push_back(Entry);
        Entry=-0.0110705795483417059055231135289;
        ret.push_back(Entry);
        Entry=-0.10583043025778335333164648091;
        ret.push_back(Entry);
        Entry=0.264421245627064316341403582555;
        ret.push_back(Entry);
        Entry=0.0159224579562999603299378037491;
        ret.push_back(Entry);
        Entry=-0.323367355912990817046193114948;
        ret.push_back(Entry);
        Entry=1.39887305294428054835975672177;
        ret.push_back(Entry);
        Entry=0.125980673578673763035595811743;
        ret.push_back(Entry);
        Entry=-2.66445291887349267057061297237;
        ret.push_back(Entry);
        Entry=-0.333702899329646029968898801599;
        ret.push_back(Entry);
        Entry=0.326212958303203237608869358155;
        ret.push_back(Entry);
        Entry=-0.917499621337971804635458283883;
        ret.push_back(Entry);
        Entry=-0.185457588631344427732017265953;
        ret.push_back(Entry);
        Entry=0.645552003732874690733467559767;
        ret.push_back(Entry);
        Entry=0.32847768092716006504971915092;
        ret.push_back(Entry);
        Entry=-0.0242582908661832831465066107057;
        ret.push_back(Entry);
        Entry=0.212389198604569368056260714184;
        ret.push_back(Entry);
        Entry=-0.180389850880450286485512378931;
        ret.push_back(Entry);
        Entry=0.178636926632399772874038035297;
        ret.push_back(Entry);
        Entry=-0.0967839623194637344028024017462;
        ret.push_back(Entry);
        Entry=-0.0463534358082357822450347839549;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=-18.7114846975088973124456970254;
        ret.push_back(Entry);
        Entry=16.772341637010676151930965716;
        ret.push_back(Entry);
        Entry=31.3372725978647679312416585162;
        ret.push_back(Entry);
        Entry=-86.7993523131672475301456870511;
        ret.push_back(Entry);
        Entry=-1.82612434163701053968509313563;
        ret.push_back(Entry);
        Entry=-326.224284697508892350015230477;
        ret.push_back(Entry);
        Entry=-26.874758718861208706130128121;
        ret.push_back(Entry);
        Entry=48.4226028469750815474981209263;
        ret.push_back(Entry);
        Entry=-1444.0616370106761223723879084;
        ret.push_back(Entry);
        Entry=-111.754996441281122088184929453;
        ret.push_back(Entry);
        Entry=580.838427046263291231298353523;
        ret.push_back(Entry);
        Entry=-316.971444839857610986655345187;
        ret.push_back(Entry);
        Entry=-2618.37715302491096736048348248;
        ret.push_back(Entry);
        Entry=213.689544483985770284562022425;
        ret.push_back(Entry);
        Entry=-227.057644128113850001682294533;
        ret.push_back(Entry);
        Entry=-1560.25281138790023760520853102;
        ret.push_back(Entry);
        Entry=-475.121373665480405179550871253;
        ret.push_back(Entry);
        Entry=287.077352313167239117319695652;
        ret.push_back(Entry);
        Entry=62.3445039145907458077999763191;
        ret.push_back(Entry);
        Entry=349.71219928825621536816470325;
        ret.push_back(Entry);
        Entry=-307.689800711743771444162121043;
        ret.push_back(Entry);
        Entry=551.858391459074709928245283663;
        ret.push_back(Entry);
        Entry=-413.537117437722372415009886026;
        ret.push_back(Entry);
        Entry=-278.790676156583572264935355633;
        ret.push_back(Entry);
        Entry=-0.0197116540925266897632539553342;
        ret.push_back(Entry);
        Entry=0.0176688597864768648371125436825;
        ret.push_back(Entry);
        Entry=0.0330123174377224201658798108383;
        ret.push_back(Entry);
        Entry=-0.0914389679715302411411315119949;
        ret.push_back(Entry);
        Entry=-0.00192373466192170784402892813603;
        ret.push_back(Entry);
        Entry=-0.343661679715302481596950201492;
        ret.push_back(Entry);
        Entry=-0.0283112725978647700175727663918;
        ret.push_back(Entry);
        Entry=0.0510108953736654810451334185473;
        ret.push_back(Entry);
        Entry=-1.52124982206405690021711052395;
        ret.push_back(Entry);
        Entry=-0.117728540925266883521160821147;
        ret.push_back(Entry);
        Entry=0.611885494661921658376968480297;
        ret.push_back(Entry);
        Entry=-0.33391425622775794401775328879;
        ret.push_back(Entry);
        Entry=-3.25305395017793586021070950665;
        ret.push_back(Entry);
        Entry=0.225111715302491077750346448738;
        ret.push_back(Entry);
        Entry=-0.239194362989323838775135300239;
        ret.push_back(Entry);
        Entry=-1.64365167259786471021243414725;
        ret.push_back(Entry);
        Entry=-0.500517637010676086362082060077;
        ret.push_back(Entry);
        Entry=0.302422256227757979551995504153;
        ret.push_back(Entry);
        Entry=0.0656769523131672527949120876656;
        ret.push_back(Entry);
        Entry=0.368405074733096082884031829963;
        ret.push_back(Entry);
        Entry=-0.324136483985765111448529296467;
        ret.push_back(Entry);
        Entry=0.581356412811387834871368340828;
        ret.push_back(Entry);
        Entry=-0.435641572953736622153542157321;
        ret.push_back(Entry);
        Entry=-0.293692640569394980420980800773;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=2.16050427046263360253419705259;
        ret.push_back(Entry);
        Entry=59.1520533807829096417663095053;
        ret.push_back(Entry);
        Entry=-19.3970683274021347131110815099;
        ret.push_back(Entry);
        Entry=2.43569387900355849296829546802;
        ret.push_back(Entry);
        Entry=-153.3190177935942983822315;
        ret.push_back(Entry);
        Entry=143.738903914590736121681402437;
        ret.push_back(Entry);
        Entry=5.16718562277580062414017447736;
        ret.push_back(Entry);
        Entry=235.263274021352287945774151012;
        ret.push_back(Entry);
        Entry=606.807309608540890621952712536;
        ret.push_back(Entry);
        Entry=-229.217686832740184854628751054;
        ret.push_back(Entry);
        Entry=1225.80341637010678823571652174;
        ret.push_back(Entry);
        Entry=308.876533807829162014968460426;
        ret.push_back(Entry);
        Entry=220.468597864768668159740627743;
        ret.push_back(Entry);
        Entry=-2060.73423487544459931086748838;
        ret.push_back(Entry);
        Entry=-41.0243736654804251884343102574;
        ret.push_back(Entry);
        Entry=847.464056939501688248128630221;
        ret.push_back(Entry);
        Entry=-549.357174377224168893008027226;
        ret.push_back(Entry);
        Entry=704.763281138789920987619552761;
        ret.push_back(Entry);
        Entry=575.932362989323792135110124946;
        ret.push_back(Entry);
        Entry=-182.761715302491097645543050021;
        ret.push_back(Entry);
        Entry=62.7699857651245594070132938214;
        ret.push_back(Entry);
        Entry=-246.61828469750886938527401071;
        ret.push_back(Entry);
        Entry=238.446576512455493457309785299;
        ret.push_back(Entry);
        Entry=159.346797153024880344673874788;
        ret.push_back(Entry);
        Entry=0.0022759879003558720379774005238;
        ret.push_back(Entry);
        Entry=0.0623138583629893258453158466637;
        ret.push_back(Entry);
        Entry=-0.0204338832740213506566906431772;
        ret.push_back(Entry);
        Entry=0.00256588697508896776411368989557;
        ret.push_back(Entry);
        Entry=-0.161514249110320279312347224732;
        ret.push_back(Entry);
        Entry=0.151422056939501781247514600182;
        ret.push_back(Entry);
        Entry=0.00544338284697508910381369418019;
        ret.push_back(Entry);
        Entry=0.24783860498220636192634458439;
        ret.push_back(Entry);
        Entry=0.639242469750889719115605203115;
        ret.push_back(Entry);
        Entry=-0.241469864768683262212789486512;
        ret.push_back(Entry);
        Entry=1.29132526690391435941762665607;
        ret.push_back(Entry);
        Entry=0.325386654804270425422885182343;
        ret.push_back(Entry);
        Entry=0.232253124555160117559182708646;
        ret.push_back(Entry);
        Entry=-2.66560384341637002236780062958;
        ret.push_back(Entry);
        Entry=-0.0432172149466192173639100815308;
        ret.push_back(Entry);
        Entry=0.892762846975088897316652492009;
        ret.push_back(Entry);
        Entry=-0.578721501779359437378502661886;
        ret.push_back(Entry);
        Entry=0.742434377224199248956892915885;
        ret.push_back(Entry);
        Entry=0.606717195729537306370104943198;
        ret.push_back(Entry);
        Entry=-0.192530725978647676566168911449;
        ret.push_back(Entry);
        Entry=0.0661251772241992774592489467977;
        ret.push_back(Entry);
        Entry=-0.259800562277580027181755895072;
        ret.push_back(Entry);
        Entry=0.251192064056939501348608700937;
        ret.push_back(Entry);
        Entry=0.167864227758007106272586383966;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=-11.1083828280582004310872434871;
        ret.push_back(Entry);
        Entry=11.6502082651401384083555967663;
        ret.push_back(Entry);
        Entry=6.89960295943889612146904255496;
        ret.push_back(Entry);
        Entry=10.7451850398914583450959980837;
        ret.push_back(Entry);
        Entry=-14.1652147242329675691507873125;
        ret.push_back(Entry);
        Entry=-24.2239593614368438068140676478;
        ret.push_back(Entry);
        Entry=58.5999510258338744961292832159;
        ret.push_back(Entry);
        Entry=1.04731991374549937567905999458;
        ret.push_back(Entry);
        Entry=-23.4107195954134219562092766864;
        ret.push_back(Entry);
        Entry=194.708078988333653569497982971;
        ret.push_back(Entry);
        Entry=124.737269840159314071570406668;
        ret.push_back(Entry);
        Entry=-874.489519278580587524629663676;
        ret.push_back(Entry);
        Entry=-232.167612834229942109232069924;
        ret.push_back(Entry);
        Entry=-36.5383385264273101711296476424;
        ret.push_back(Entry);
        Entry=-982.436514738475466401723679155;
        ret.push_back(Entry);
        Entry=-164.622018135433563656988553703;
        ret.push_back(Entry);
        Entry=658.461161737183715558785479516;
        ret.push_back(Entry);
        Entry=612.287968096828990383073687553;
        ret.push_back(Entry);
        Entry=81.8579199472278418170390068553;
        ret.push_back(Entry);
        Entry=340.625707439325765335524920374;
        ret.push_back(Entry);
        Entry=-202.906835394329505106725264341;
        ret.push_back(Entry);
        Entry=81.1963376818728193029528483748;
        ret.push_back(Entry);
        Entry=-56.0243321647830825327218917664;
        ret.push_back(Entry);
        Entry=-15.279456961452833496650782763;
        ret.push_back(Entry);
        Entry=-0.0117021496160775190925606992209;
        ret.push_back(Entry);
        Entry=0.0122729372755871288941387220461;
        ret.push_back(Entry);
        Entry=0.00726840154318596914917449680615;
        ret.push_back(Entry);
        Entry=0.0113195383185369716216861490921;
        ret.push_back(Entry);
        Entry=-0.014922375946688123601879816249;
        ret.push_back(Entry);
        Entry=-0.0255187825921826226538424720047;
        ret.push_back(Entry);
        Entry=0.0617322449907673764801785409873;
        ret.push_back(Entry);
        Entry=0.00110330144598724181996540760764;
        ret.push_back(Entry);
        Entry=-0.0246620732563572718498701163981;
        ret.push_back(Entry);
        Entry=0.205115645247132161177461284751;
        ret.push_back(Entry);
        Entry=0.131404746496223245877388308145;
        ret.push_back(Entry);
        Entry=-0.921232862165207944116218641284;
        ret.push_back(Entry);
        Entry=-0.244577472883054203300901008333;
        ret.push_back(Entry);
        Entry=-0.038491392040698534093845495363;
        ret.push_back(Entry);
        Entry=-1.52966872474769566281338484259;
        ret.push_back(Entry);
        Entry=-0.173421420200844084158475766344;
        ret.push_back(Entry);
        Entry=0.693657345750116838267729235668;
        ret.push_back(Entry);
        Entry=0.645016066524908171508911891578;
        ret.push_back(Entry);
        Entry=0.0862334056285309624723112165157;
        ret.push_back(Entry);
        Entry=0.358832890650182034786297435858;
        ret.push_back(Entry);
        Entry=-0.213752645479509589820921178216;
        ret.push_back(Entry);
        Entry=0.0855364545202405707202686357959;
        ret.push_back(Entry);
        Entry=-0.0590189537518958778905542317261;
        ret.push_back(Entry);
        Entry=-0.0160961767667555377681054551431;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=-45.1603783093193342779159138445;
        ret.push_back(Entry);
        Entry=0.346772822769536581688498699805;
        ret.push_back(Entry);
        Entry=87.265909574845636598183773458;
        ret.push_back(Entry);
        Entry=-58.9888295833629143771759117953;
        ret.push_back(Entry);
        Entry=81.8600468450564449085504747927;
        ret.push_back(Entry);
        Entry=-393.992518986443371886707609519;
        ret.push_back(Entry);
        Entry=-43.6167797572574400533085281495;
        ret.push_back(Entry);
        Entry=-87.1050748811129409432396641932;
        ret.push_back(Entry);
        Entry=-585.654070551494100982381496578;
        ret.push_back(Entry);
        Entry=-95.7752714883952194213634356856;
        ret.push_back(Entry);
        Entry=-55.6205486549790677486271306407;
        ret.push_back(Entry);
        Entry=-175.404237348285931830105255358;
        ret.push_back(Entry);
        Entry=-1550.15302718432849360397085547;
        ret.push_back(Entry);
        Entry=849.008588260345163689635228366;
        ret.push_back(Entry);
        Entry=-150.236837248917595388775225729;
        ret.push_back(Entry);
        Entry=-2830.97537085669728185166604817;
        ret.push_back(Entry);
        Entry=-714.726453261409687911509536207;
        ret.push_back(Entry);
        Entry=-306.411711264106770613580010831;
        ret.push_back(Entry);
        Entry=-276.742039889275361019826959819;
        ret.push_back(Entry);
        Entry=1235.5631343601392018172191456;
        ret.push_back(Entry);
        Entry=-213.255511391866036774445092306;
        ret.push_back(Entry);
        Entry=900.367023919369898976583499461;
        ret.push_back(Entry);
        Entry=-708.017055859181027699378319085;
        ret.push_back(Entry);
        Entry=-408.512804315423409207141958177;
        ret.push_back(Entry);
        Entry=-0.0475742983888139750470180899811;
        ret.push_back(Entry);
        Entry=0.000365308581162609199814716998134;
        ret.push_back(Entry);
        Entry=0.0919304634821492133722742323698;
        ret.push_back(Entry);
        Entry=-0.0621419100007097879867501433182;
        ret.push_back(Entry);
        Entry=0.0862356448292994626214635900396;
        ret.push_back(Entry);
        Entry=-0.415052267726595314201176734059;
        ret.push_back(Entry);
        Entry=-0.045948190787138909474407455491;
        ret.push_back(Entry);
        Entry=-0.0917610263325999153671830299572;
        ret.push_back(Entry);
        Entry=-0.616958549222798025013503320224;
        ret.push_back(Entry);
        Entry=-0.100894669600397487996268353072;
        ret.push_back(Entry);
        Entry=-0.0585935871956845891195264641738;
        ret.push_back(Entry);
        Entry=-0.184779970189509590294818508482;
        ret.push_back(Entry);
        Entry=-1.63301206615089822271613684279;
        ret.push_back(Entry);
        Entry=0.894389949606075762567058973218;
        ret.push_back(Entry);
        Entry=-0.158267322024274292857626278419;
        ret.push_back(Entry);
        Entry=-3.47701596990560046762652746111;
        ret.push_back(Entry);
        Entry=-0.752930158279508932039902902034;
        ret.push_back(Entry);
        Entry=-0.322790077365320504654278011003;
        ret.push_back(Entry);
        Entry=-0.291534502093832081914825948843;
        ret.push_back(Entry);
        Entry=1.30160664348072985241344667884;
        ret.push_back(Entry);
        Entry=-0.22465448222017178614429155914;
        ret.push_back(Entry);
        Entry=0.948493576549081063298274330009;
        ret.push_back(Entry);
        Entry=-0.745862090992973292280510122509;
        ret.push_back(Entry);
        Entry=-0.430348697565476667747930150654;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=3.50587422812122984083771370933;
        ret.push_back(Entry);
        Entry=-19.0015182056923883635590755148;
        ret.push_back(Entry);
        Entry=24.5852885229611786144232610241;
        ret.push_back(Entry);
        Entry=-17.3408630846759912458310282091;
        ret.push_back(Entry);
        Entry=25.6996557598126251775738637662;
        ret.push_back(Entry);
        Entry=-100.435850663638305491076607723;
        ret.push_back(Entry);
        Entry=-121.826055788203589713702967856;
        ret.push_back(Entry);
        Entry=37.285895379373982905235607177;
        ret.push_back(Entry);
        Entry=-153.776527787635785671227495186;
        ret.push_back(Entry);
        Entry=-417.65495776847188835745328106;
        ret.push_back(Entry);
        Entry=181.103974732060521546372910962;
        ret.push_back(Entry);
        Entry=615.653481439420829701703041792;
        ret.push_back(Entry);
        Entry=-480.914649726737252422026358545;
        ret.push_back(Entry);
        Entry=-550.196003974732207097986247391;
        ret.push_back(Entry);
        Entry=663.429214280644600876257754862;
        ret.push_back(Entry);
        Entry=-703.068535737099978177866432816;
        ret.push_back(Entry);
        Entry=-2922.44552487756436676136218011;
        ret.push_back(Entry);
        Entry=-629.581787209880189948307815939;
        ret.push_back(Entry);
        Entry=982.783377102704434946645051241;
        ret.push_back(Entry);
        Entry=-72.5847185747746550532610854134;
        ret.push_back(Entry);
        Entry=517.719256157285940389556344599;
        ret.push_back(Entry);
        Entry=573.364475832209564032382331789;
        ret.push_back(Entry);
        Entry=-34.1032429554972011942481913138;
        ret.push_back(Entry);
        Entry=-92.2937185037973080170559114777;
        ret.push_back(Entry);
        Entry=0.00369327077862162010332691686187;
        ret.push_back(Entry);
        Entry=-0.0200171907161615474091131972045;
        ret.push_back(Entry);
        Entry=0.0258994250833983995219167439927;
        ret.push_back(Entry);
        Entry=-0.0182677698914046442169034634162;
        ret.push_back(Entry);
        Entry=0.0270733579388175195357124636075;
        ret.push_back(Entry);
        Entry=-0.105804365107530717882156068299;
        ret.push_back(Entry);
        Entry=-0.128337923202498427333040353915;
        ret.push_back(Entry);
        Entry=0.0392789069486833772315570456612;
        ret.push_back(Entry);
        Entry=-0.161996216906806766999693536491;
        ret.push_back(Entry);
        Entry=-0.439979515934416975930787430116;
        ret.push_back(Entry);
        Entry=0.190784370785719387120238366151;
        ret.push_back(Entry);
        Entry=0.648561494783164271815678603161;
        ret.push_back(Entry);
        Entry=-0.506620576336148875640219557681;
        ret.push_back(Entry);
        Entry=-0.579605167151678757342381231865;
        ret.push_back(Entry);
        Entry=0.698890943289090960099940730288;
        ret.push_back(Entry);
        Entry=-0.740649087940946970753941513976;
        ret.push_back(Entry);
        Entry=-3.57337539924764024945602614025;
        ret.push_back(Entry);
        Entry=-0.663234296259493261160855581693;
        ret.push_back(Entry);
        Entry=1.0353152814252255531357604923;
        ret.push_back(Entry);
        Entry=-0.0764645255163602932668709399877;
        ret.push_back(Entry);
        Entry=0.545392469302292681732069468126;
        ret.push_back(Entry);
        Entry=0.604012044857690444388254036312;
        ret.push_back(Entry);
        Entry=-0.0359261352828447802498779140024;
        ret.push_back(Entry);
        Entry=-0.097227013982539578496044896383;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=-6.54097088785665548016368120443;
        ret.push_back(Entry);
        Entry=11.6886323714240738524949847488;
        ret.push_back(Entry);
        Entry=14.4464819807551521080313250422;
        ret.push_back(Entry);
        Entry=-16.8409220386246261114138178527;
        ret.push_back(Entry);
        Entry=27.2526336107703208710972830886;
        ret.push_back(Entry);
        Entry=-50.505723230995648975749645615;
        ret.push_back(Entry);
        Entry=-63.9499663927278376718277286272;
        ret.push_back(Entry);
        Entry=-102.319707604238772091775899753;
        ret.push_back(Entry);
        Entry=-140.126520760298944878741167486;
        ret.push_back(Entry);
        Entry=-204.161754674409252174882567488;
        ret.push_back(Entry);
        Entry=-309.407631224529097835329594091;
        ret.push_back(Entry);
        Entry=316.394751768442176853568525985;
        ret.push_back(Entry);
        Entry=287.2499881312607499239675235;
        ret.push_back(Entry);
        Entry=700.158041633038578765990678221;
        ret.push_back(Entry);
        Entry=615.107412090122465997410472482;
        ret.push_back(Entry);
        Entry=-292.97075792519444803474470973;
        ret.push_back(Entry);
        Entry=-628.325308399819164151267614216;
        ret.push_back(Entry);
        Entry=-1965.69728218364821259456221014;
        ret.push_back(Entry);
        Entry=-1181.82533713466159497329499573;
        ret.push_back(Entry);
        Entry=-160.135147459715000195501488633;
        ret.push_back(Entry);
        Entry=504.084326767630102494877064601;
        ret.push_back(Entry);
        Entry=10.6839129858999388744678071816;
        ret.push_back(Entry);
        Entry=-328.238485448925700893596513197;
        ret.push_back(Entry);
        Entry=-67.7285981644682522073708241805;
        ret.push_back(Entry);
        Entry=-0.00689060020839007449089397283615;
        ret.push_back(Entry);
        Entry=0.0123134152984300786898286261817;
        ret.push_back(Entry);
        Entry=0.0152186777724750196133518542752;
        ret.push_back(Entry);
        Entry=-0.0177411059416157958212867384873;
        ret.push_back(Entry);
        Entry=0.0287093458200799109270029418894;
        ret.push_back(Entry);
        Entry=-0.0532053635457296267285975943651;
        ret.push_back(Entry);
        Entry=-0.0673682320076159912858315692574;
        ret.push_back(Entry);
        Entry=-0.107788916346627156039872375004;
        ret.push_back(Entry);
        Entry=-0.14761658849956649230961147623;
        ret.push_back(Entry);
        Entry=-0.215074641876410205254543939191;
        ret.push_back(Entry);
        Entry=-0.325946138411987662575342028504;
        ret.push_back(Entry);
        Entry=0.333306736946260839804523357088;
        ret.push_back(Entry);
        Entry=0.302604120076659544036346005669;
        ret.push_back(Entry);
        Entry=0.737582987474107443226500890887;
        ret.push_back(Entry);
        Entry=0.647986249753255250105610230094;
        ret.push_back(Entry);
        Entry=-0.308630678567055893868342764108;
        ret.push_back(Entry);
        Entry=-0.66191065462968279309308172742;
        ret.push_back(Entry);
        Entry=-2.56548695563090456417398854683;
        ret.push_back(Entry);
        Entry=-1.24499645187163787696249528381;
        ret.push_back(Entry);
        Entry=-0.168694719785313251847469473432;
        ret.push_back(Entry);
        Entry=0.531028726096983927362771282787;
        ret.push_back(Entry);
        Entry=0.0112549911171856854147366178154;
        ret.push_back(Entry);
        Entry=-0.345783542931103859974228953433;
        ret.push_back(Entry);
        Entry=-0.0713488384876977410620213504444;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=-11.4112002079407375276787206531;
        ret.push_back(Entry);
        Entry=5.93830658262395250091003617854;
        ret.push_back(Entry);
        Entry=26.8337117421534898653590062167;
        ret.push_back(Entry);
        Entry=-15.3591467931639495958506813622;
        ret.push_back(Entry);
        Entry=6.13459763467411889337199681904;
        ret.push_back(Entry);
        Entry=-51.1364539606212247235816903412;
        ret.push_back(Entry);
        Entry=-1.60716979660796699391767106135;
        ret.push_back(Entry);
        Entry=-127.632243810514026449709490407;
        ret.push_back(Entry);
        Entry=-64.6616635258951220066592213698;
        ret.push_back(Entry);
        Entry=76.0686659302099030810495605692;
        ret.push_back(Entry);
        Entry=-444.215387614529902293725172058;
        ret.push_back(Entry);
        Entry=-20.0623269868087632517017482314;
        ret.push_back(Entry);
        Entry=77.7994476574176445637931465171;
        ret.push_back(Entry);
        Entry=570.732100851257428075768984854;
        ret.push_back(Entry);
        Entry=84.5580349600364087336856755428;
        ret.push_back(Entry);
        Entry=-263.819604912599913859594380483;
        ret.push_back(Entry);
        Entry=983.067580739489244479045737535;
        ret.push_back(Entry);
        Entry=-1184.40860354798905973439104855;
        ret.push_back(Entry);
        Entry=-2653.38137630775236175395548344;
        ret.push_back(Entry);
        Entry=240.050022743518127299466868863;
        ret.push_back(Entry);
        Entry=17.0288589252063182755136949709;
        ret.push_back(Entry);
        Entry=-433.291233998310474362369859591;
        ret.push_back(Entry);
        Entry=-721.564494119176060848985798657;
        ret.push_back(Entry);
        Entry=-85.1712391968289210808507050388;
        ret.push_back(Entry);
        Entry=-0.0120211534212749382444229695466;
        ret.push_back(Entry);
        Entry=0.00625572194424589122369040339322;
        ret.push_back(Entry);
        Entry=0.0282680317109623782667604530161;
        ret.push_back(Entry);
        Entry=-0.0161801267138865431660654792267;
        ret.push_back(Entry);
        Entry=0.00646250516602768238644260989645;
        ret.push_back(Entry);
        Entry=-0.0538698083046331849255139445631;
        ret.push_back(Entry);
        Entry=-0.00169307648320228759999950263193;
        ret.push_back(Entry);
        Entry=-0.134454460978621098687924018122;
        ret.push_back(Entry);
        Entry=-0.0681179673792969009316067285909;
        ret.push_back(Entry);
        Entry=0.0801347001104685263683791163203;
        ret.push_back(Entry);
        Entry=-0.467959659497043434228658043139;
        ret.push_back(Entry);
        Entry=-0.0211347020599129270523874879473;
        ret.push_back(Entry);
        Entry=0.0819579959711482231021761890588;
        ret.push_back(Entry);
        Entry=0.601238962895574879929938560963;
        ret.push_back(Entry);
        Entry=0.0890778478133732037891334698543;
        ret.push_back(Entry);
        Entry=-0.277921333419975324918738124325;
        ret.push_back(Entry);
        Entry=1.03561465982195088919581849041;
        ret.push_back(Entry);
        Entry=-1.24771778543115230419857653033;
        ret.push_back(Entry);
        Entry=-3.28992923516797741712025526795;
        ret.push_back(Entry);
        Entry=0.252881213854051600797845367197;
        ret.push_back(Entry);
        Entry=0.0179390883098317008292887919652;
        ret.push_back(Entry);
        Entry=-0.45645158879719288647081043564;
        ret.push_back(Entry);
        Entry=-0.760133666904932114860571346071;
        ret.push_back(Entry);
        Entry=-0.0897238287088179958805866931471;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=10.6611508220157276127793011256;
        ret.push_back(Entry);
        Entry=0.756293391383455859688922373607;
        ret.push_back(Entry);
        Entry=-31.3702443303658462525618233485;
        ret.push_back(Entry);
        Entry=18.7569530183897619224353547907;
        ret.push_back(Entry);
        Entry=-29.4139450256676866501948097721;
        ret.push_back(Entry);
        Entry=193.909259860939641839649993926;
        ret.push_back(Entry);
        Entry=-34.3953557736045283377279702108;
        ret.push_back(Entry);
        Entry=32.9084306972512905531402793713;
        ret.push_back(Entry);
        Entry=271.894307622327687568031251431;
        ret.push_back(Entry);
        Entry=-54.4287978426148555399777251296;
        ret.push_back(Entry);
        Entry=-33.1576548183767698674273560755;
        ret.push_back(Entry);
        Entry=199.942848788095432155387243256;
        ret.push_back(Entry);
        Entry=354.878114237442389367060968652;
        ret.push_back(Entry);
        Entry=-181.870160504256318745319731534;
        ret.push_back(Entry);
        Entry=333.882630450321698845073115081;
        ret.push_back(Entry);
        Entry=1248.28799792059271567268297076;
        ret.push_back(Entry);
        Entry=-59.0839885632594743469780951273;
        ret.push_back(Entry);
        Entry=-157.942614854766418375220382586;
        ret.push_back(Entry);
        Entry=239.255013321203477971721440554;
        ret.push_back(Entry);
        Entry=-1528.86607316914705734234303236;
        ret.push_back(Entry);
        Entry=772.831178114237559384491760284;
        ret.push_back(Entry);
        Entry=-858.918643186691838309343438596;
        ret.push_back(Entry);
        Entry=734.272402365325888240477070212;
        ret.push_back(Entry);
        Entry=372.630352849437940676580183208;
        ret.push_back(Entry);
        Entry=0.011231012411462733963096738421;
        ret.push_back(Entry);
        Entry=0.000796718890116316887442526883945;
        ret.push_back(Entry);
        Entry=-0.0330470517902397911691458887162;
        ret.push_back(Entry);
        Entry=0.019759552927415689055345993097;
        ret.push_back(Entry);
        Entry=-0.0309861842874780760159758585814;
        ret.push_back(Entry);
        Entry=0.204274130872701326078200168013;
        ret.push_back(Entry);
        Entry=-0.0362338618493729322511676116392;
        ret.push_back(Entry);
        Entry=0.0346674572746767245545740365742;
        ret.push_back(Entry);
        Entry=0.28642764961985833771507259371;
        ret.push_back(Entry);
        Entry=-0.0573381350315160243091838765395;
        ret.push_back(Entry);
        Entry=-0.0349300032490740194890399550331;
        ret.push_back(Entry);
        Entry=0.210630229384625389243979043385;
        ret.push_back(Entry);
        Entry=0.373847118071349682200121833375;
        ret.push_back(Entry);
        Entry=-0.191591513418675696289739107669;
        ret.push_back(Entry);
        Entry=0.351729378127233760498171477593;
        ret.push_back(Entry);
        Entry=1.31501169666645023603734898643;
        ret.push_back(Entry);
        Entry=-0.0622421554357008369184889318149;
        ret.push_back(Entry);
        Entry=-0.166384989278055783756826713216;
        ret.push_back(Entry);
        Entry=0.252043713041783135064832777061;
        ret.push_back(Entry);
        Entry=-2.10530612775359049493317797896;
        ret.push_back(Entry);
        Entry=0.814140684904802292010117525933;
        ret.push_back(Entry);
        Entry=-0.904829683540191109791805956775;
        ret.push_back(Entry);
        Entry=0.773520826564429220262297803856;
        ret.push_back(Entry);
        Entry=0.392548248749106504646175839886;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=21.1449814707675933789232658455;
        ret.push_back(Entry);
        Entry=-0.673621353988286819536313032586;
        ret.push_back(Entry);
        Entry=25.3394609852093992685695411637;
        ret.push_back(Entry);
        Entry=82.6641187606019087752429186366;
        ret.push_back(Entry);
        Entry=-18.1427928675443617123619333142;
        ret.push_back(Entry);
        Entry=-108.579163226220060778359766118;
        ret.push_back(Entry);
        Entry=131.042272475300649148266529664;
        ret.push_back(Entry);
        Entry=40.6754471403646746807680756319;
        ret.push_back(Entry);
        Entry=-205.497726909328065403315122239;
        ret.push_back(Entry);
        Entry=125.370345056828526253411837388;
        ret.push_back(Entry);
        Entry=92.0378423065729265317713725381;
        ret.push_back(Entry);
        Entry=-169.715032662595461943055852316;
        ret.push_back(Entry);
        Entry=-294.360767963166495064797345549;
        ret.push_back(Entry);
        Entry=57.772371141508656933183374349;
        ret.push_back(Entry);
        Entry=-200.480806721468326259127934463;
        ret.push_back(Entry);
        Entry=-211.366073774944595697888871655;
        ret.push_back(Entry);
        Entry=512.504142406999449121940415353;
        ret.push_back(Entry);
        Entry=500.793480898018344760203035548;
        ret.push_back(Entry);
        Entry=15.0058999981337102269662864273;
        ret.push_back(Entry);
        Entry=785.701999906181072219624184072;
        ret.push_back(Entry);
        Entry=-3685.60934113408893608720973134;
        ret.push_back(Entry);
        Entry=248.167858149861046967998845503;
        ret.push_back(Entry);
        Entry=-125.373684202562060363561613485;
        ret.push_back(Entry);
        Entry=-428.072869037392877089587273076;
        ret.push_back(Entry);
        Entry=0.0222752263128719006635147792394;
        ret.push_back(Entry);
        Entry=-0.000709627887011782384693581171575;
        ret.push_back(Entry);
        Entry=0.0266939097916161216517139109783;
        ret.push_back(Entry);
        Entry=0.0870826963147835891865256030542;
        ret.push_back(Entry);
        Entry=-0.0191125645194076508592839758194;
        ret.push_back(Entry);
        Entry=-0.114382956637006108491227962531;
        ret.push_back(Entry);
        Entry=0.138046766198765935573788965485;
        ret.push_back(Entry);
        Entry=0.042849637561455156120615583859;
        ret.push_back(Entry);
        Entry=-0.216482023340729551330596791558;
        ret.push_back(Entry);
        Entry=0.132071662506185238949996119118;
        ret.push_back(Entry);
        Entry=0.0969574632176956607843010260694;
        ret.push_back(Entry);
        Entry=-0.178786669444244095128482285872;
        ret.push_back(Entry);
        Entry=-0.310094989112468188974247595979;
        ret.push_back(Entry);
        Entry=0.0608604302655730497462194250602;
        ret.push_back(Entry);
        Entry=-0.211196937468695500328408343194;
        ret.push_back(Entry);
        Entry=-0.222664048144226883740870448491;
        ret.push_back(Entry);
        Entry=0.539898604973511275773034867598;
        ret.push_back(Entry);
        Entry=0.527561974696135194129453793721;
        ret.push_back(Entry);
        Entry=0.0158079976071136933668537238873;
        ret.push_back(Entry);
        Entry=0.827699474866371187609104254079;
        ret.push_back(Entry);
        Entry=-4.37733199229474490010716181132;
        ret.push_back(Entry);
        Entry=0.261432967658204618022210752315;
        ret.push_back(Entry);
        Entry=-0.132075178192856357295426050769;
        ret.push_back(Entry);
        Entry=-0.450954289516040773833083221689;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=30.4375205161582442769940826111;
        ret.push_back(Entry);
        Entry=-10.3121138717527873751578226802;
        ret.push_back(Entry);
        Entry=-14.5585137811987106459810092929;
        ret.push_back(Entry);
        Entry=71.320301092308568513544742018;
        ret.push_back(Entry);
        Entry=9.40739826815326196651767531876;
        ret.push_back(Entry);
        Entry=217.118642820759532696683891118;
        ret.push_back(Entry);
        Entry=3.40824217556171848997337292531;
        ret.push_back(Entry);
        Entry=-22.6095251570547297603752667783;
        ret.push_back(Entry);
        Entry=366.850931009112059655308257788;
        ret.push_back(Entry);
        Entry=-62.437410153375978438816673588;
        ret.push_back(Entry);
        Entry=-17.3366212009734574905905901687;
        ret.push_back(Entry);
        Entry=170.525179693248077228417969309;
        ret.push_back(Entry);
        Entry=551.588114777293640145217068493;
        ret.push_back(Entry);
        Entry=-246.565912049351993573509389535;
        ret.push_back(Entry);
        Entry=70.631082687192261460040754173;
        ret.push_back(Entry);
        Entry=918.768747523911997632239945233;
        ret.push_back(Entry);
        Entry=591.408512083309801710129249841;
        ret.push_back(Entry);
        Entry=17.7454604108891302871597872581;
        ret.push_back(Entry);
        Entry=-424.268685267983471476327395067;
        ret.push_back(Entry);
        Entry=-874.953421246250513831910211593;
        ret.push_back(Entry);
        Entry=255.267032656064287721164873801;
        ret.push_back(Entry);
        Entry=-4294.37828965985590912168845534;
        ret.push_back(Entry);
        Entry=510.730573320504845469258725643;
        ret.push_back(Entry);
        Entry=1033.11341898239857073349412531;
        ret.push_back(Entry);
        Entry=0.0320644716735525511785986907398;
        ret.push_back(Entry);
        Entry=-0.0108633188069500261768718374356;
        ret.push_back(Entry);
        Entry=-0.015336697605976569100394435452;
        ret.push_back(Entry);
        Entry=0.0751325258928066119779032305814;
        ret.push_back(Entry);
        Entry=0.00991024393004697606857078540088;
        ret.push_back(Entry);
        Entry=0.22872410436357465401968624974;
        ret.push_back(Entry);
        Entry=0.0035904201143245233554535111864;
        ret.push_back(Entry);
        Entry=-0.0238180530873280914272438479884;
        ret.push_back(Entry);
        Entry=0.386459907182070350195601804444;
        ret.push_back(Entry);
        Entry=-0.0657748259663818030107407253126;
        ret.push_back(Entry);
        Entry=-0.0182633012620974609363511120819;
        ret.push_back(Entry);
        Entry=0.179640121116079021224010148217;
        ret.push_back(Entry);
        Entry=0.58107170751032888311726765096;
        ret.push_back(Entry);
        Entry=-0.259745395891108732389085389514;
        ret.push_back(Entry);
        Entry=0.0744064689569302190053079470999;
        ret.push_back(Entry);
        Entry=0.96787894051729028710440161376;
        ret.push_back(Entry);
        Entry=0.623020601052691191945598347957;
        ret.push_back(Entry);
        Entry=0.0186939934348293625154813213385;
        ret.push_back(Entry);
        Entry=-0.446946765521534894460842224362;
        ret.push_back(Entry);
        Entry=-0.921721546210877873406275284651;
        ret.push_back(Entry);
        Entry=0.268911607900843285801073534458;
        ret.push_back(Entry);
        Entry=-5.01864095308166824338513833936;
        ret.push_back(Entry);
        Entry=0.538030228083083428280986026948;
        ret.push_back(Entry);
        Entry=1.08833555945441173840038118215;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=-18.0268600373535576864014728926;
        ret.push_back(Entry);
        Entry=-37.4703095817533551326050655916;
        ret.push_back(Entry);
        Entry=11.8352385533986073085088719381;
        ret.push_back(Entry);
        Entry=-25.980535966947762460677040508;
        ret.push_back(Entry);
        Entry=110.255764333012621136731468141;
        ret.push_back(Entry);
        Entry=-133.089320278453783430450130254;
        ret.push_back(Entry);
        Entry=-21.1133555945441173662402434275;
        ret.push_back(Entry);
        Entry=-89.4276076744580876720647211187;
        ret.push_back(Entry);
        Entry=-265.963948157790468940220307559;
        ret.push_back(Entry);
        Entry=11.4864995189314633705635060323;
        ret.push_back(Entry);
        Entry=-31.5448808647914447078619559761;
        ret.push_back(Entry);
        Entry=-88.7753070349199191468869685195;
        ret.push_back(Entry);
        Entry=-389.129486671571726219553966075;
        ret.push_back(Entry);
        Entry=228.949340653121311106588109396;
        ret.push_back(Entry);
        Entry=-47.0853489161808838048273173627;
        ret.push_back(Entry);
        Entry=-703.447903107136880862526595592;
        ret.push_back(Entry);
        Entry=-45.6393163167128861346100165974;
        ret.push_back(Entry);
        Entry=-333.533691776557816410786472261;
        ret.push_back(Entry);
        Entry=-724.091176637047965414240024984;
        ret.push_back(Entry);
        Entry=748.637104533363526570610702038;
        ret.push_back(Entry);
        Entry=-119.884905767162834422379091848;
        ret.push_back(Entry);
        Entry=488.52793027336014120010077022;
        ret.push_back(Entry);
        Entry=-3962.51491312468169780913740396;
        ret.push_back(Entry);
        Entry=-875.810798573773354291915893555;
        ret.push_back(Entry);
        Entry=-0.0189904346595732645419651873908;
        ret.push_back(Entry);
        Entry=-0.0394731784481294964428421678804;
        ret.push_back(Entry);
        Entry=0.0124678578300979128745673563117;
        ret.push_back(Entry);
        Entry=-0.0273692517969324790316765216858;
        ret.push_back(Entry);
        Entry=0.116149170864225492749710610951;
        ret.push_back(Entry);
        Entry=-0.14020323164865017284697046307;
        ret.push_back(Entry);
        Entry=-0.0222419101250778197820245907224;
        ret.push_back(Entry);
        Entry=-0.0942077084158696037574642900836;
        ret.push_back(Entry);
        Entry=-0.280180298828456630921834857872;
        ret.push_back(Entry);
        Entry=0.0121004776727602018221441326773;
        ret.push_back(Entry);
        Entry=-0.0332310226951157416941384781239;
        ret.push_back(Entry);
        Entry=-0.0935205387967626977641089069948;
        ret.push_back(Entry);
        Entry=-0.409929299903786292791352252607;
        ret.push_back(Entry);
        Entry=0.241187175278736759542752565721;
        ret.push_back(Entry);
        Entry=-0.0496021625445695890643804659703;
        ret.push_back(Entry);
        Entry=-0.741048729413096407547811850236;
        ret.push_back(Entry);
        Entry=-0.0480788363801007423425915021653;
        ret.push_back(Entry);
        Entry=-0.351361786179183899214706343628;
        ret.push_back(Entry);
        Entry=-0.762795404380553598855385644129;
        ret.push_back(Entry);
        Entry=0.78865340426736096901549899485;
        ret.push_back(Entry);
        Entry=-0.126293016016752523977828559509;
        ret.push_back(Entry);
        Entry=0.5146408059312921334793600181;
        ret.push_back(Entry);
        Entry=-4.66903876846454224391891330015;
        ret.push_back(Entry);
        Entry=-0.922624766540268370640376360825;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=12.7084610330938190259075781796;
        ret.push_back(Entry);
        Entry=4.86691933567440315755447954871;
        ret.push_back(Entry);
        Entry=-6.43559588073118149509355134796;
        ret.push_back(Entry);
        Entry=9.49628650199741208837167505408;
        ret.push_back(Entry);
        Entry=3.55367994578690105100804430549;
        ret.push_back(Entry);
        Entry=-74.3522726144416026272665476426;
        ret.push_back(Entry);
        Entry=13.5367551904574341392617498059;
        ret.push_back(Entry);
        Entry=-16.2211943264899502992193447426;
        ret.push_back(Entry);
        Entry=-158.431125699590580779840820469;
        ret.push_back(Entry);
        Entry=2.60775068593802217264965292998;
        ret.push_back(Entry);
        Entry=-31.9341780824184731102377554635;
        ret.push_back(Entry);
        Entry=-48.0945692573996907981381809805;
        ret.push_back(Entry);
        Entry=-252.144842970665990833367686719;
        ret.push_back(Entry);
        Entry=158.721437176682400149729801342;
        ret.push_back(Entry);
        Entry=-25.2361703641677230791628971929;
        ret.push_back(Entry);
        Entry=-416.392057019735773337743012235;
        ret.push_back(Entry);
        Entry=-103.090787910280297978715680074;
        ret.push_back(Entry);
        Entry=-75.1079835242486097968139802106;
        ret.push_back(Entry);
        Entry=-90.1181567546278046165753039531;
        ret.push_back(Entry);
        Entry=375.82224441568666861712699756;
        ret.push_back(Entry);
        Entry=-425.248600818822978908428922296;
        ret.push_back(Entry);
        Entry=1006.80803829999899789982009679;
        ret.push_back(Entry);
        Entry=-878.110964748246601629944052547;
        ret.push_back(Entry);
        Entry=-4455.56999877540602028602734208;
        ret.push_back(Entry);
        Entry=0.0133877556339589802447687105769;
        ret.push_back(Entry);
        Entry=0.00512706650206360553534423729616;
        ret.push_back(Entry);
        Entry=-0.00677959255777931500686062094019;
        ret.push_back(Entry);
        Entry=0.0100038835345087218781090498965;
        ret.push_back(Entry);
        Entry=0.00374363182255966521483347975163;
        ret.push_back(Entry);
        Entry=-0.0783265635911710028649324044636;
        ret.push_back(Entry);
        Entry=0.0142603242360354928036647592648;
        ret.push_back(Entry);
        Entry=-0.0170882522563968464179851025619;
        ret.push_back(Entry);
        Entry=-0.166899613921976802677349382975;
        ret.push_back(Entry);
        Entry=0.00274714061481228953229272171654;
        ret.push_back(Entry);
        Entry=-0.0336411290589492956160100334273;
        ret.push_back(Entry);
        Entry=-0.0506653267845145124925743118638;
        ret.push_back(Entry);
        Entry=-0.265622532195233351792751363973;
        ret.push_back(Entry);
        Entry=0.167205439678825451554899927942;
        ret.push_back(Entry);
        Entry=-0.026585098099893757911393876725;
        ret.push_back(Entry);
        Entry=-0.438649132358733206960010875264;
        ret.push_back(Entry);
        Entry=-0.108601211851420367815457268534;
        ret.push_back(Entry);
        Entry=-0.0791226695483234626626867225241;
        ret.push_back(Entry);
        Entry=-0.0949351668591816438835806479801;
        ret.push_back(Entry);
        Entry=0.395910754415984555976137926336;
        ret.push_back(Entry);
        Entry=-0.447979047861759849258334043043;
        ret.push_back(Entry);
        Entry=1.06062409603463292384617489006;
        ret.push_back(Entry);
        Entry=-0.925047908095888993251776355464;
        ret.push_back(Entry);
        Entry=-5.18844885334992600434134146781;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        Entry=0;
        ret.push_back(Entry);
        return ret;
    }

}

extern "C" void thinHandle(int state, std::vector<double> &notbloating, std::vector<double> &thin_indicate, std::vector<double> &bloating, std::vector<double> &not_thin)
{
    if (int(state) == 1)
    {
        notbloating=std::vector<double>{49};
        thin_indicate=std::vector<double>{};
        bloating=std::vector<double>{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48};
        not_thin=std::vector<double>{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48};
        return;
    }
}
